// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NinjaTools.FluentMockServer.API.Data;

namespace NinjaTools.FluentMockServer.API.Migrations
{
    [DbContext(typeof(ExpectationDbContext))]
    [Migration("20191201103246_initial commit")]
    partial class initialcommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.Expectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Id", "CreatedOn", "Timestamp");

                    b.ToTable("Expectations");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.Expectation", b =>
                {
                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpError", "HttpError", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Delay")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("DropConnection")
                                .HasColumnType("bit");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ResponseBytes")
                                .HasColumnName("Base64Response")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpForward", "HttpForward", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Host")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<int?>("Port")
                                .HasColumnType("int");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpRequest", "HttpRequest", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Body")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Cookies")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Headers")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<bool?>("KeepAlive")
                                .HasColumnType("bit");

                            b1.Property<string>("Method")
                                .HasColumnType("nvarchar(20)")
                                .HasMaxLength(20);

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Path")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<bool?>("Secure")
                                .HasColumnType("bit");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.HasIndex("Body");

                            b1.HasIndex("Method");

                            b1.HasIndex("Path");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpResponse", "HttpResponse", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Body")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Delay")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Headers")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<int?>("StatusCode")
                                .HasColumnType("int");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");

                            b1.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.ConnectionOptions", "ConnectionOptions", b2 =>
                                {
                                    b2.Property<int>("HttpResponseExpectationId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<bool?>("CloseSocket")
                                        .HasColumnType("bit");

                                    b2.Property<long?>("ContentLengthHeaderOverride")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTime>("CreatedOn")
                                        .HasColumnType("datetime2");

                                    b2.Property<bool?>("KeepAliveOverride")
                                        .HasColumnType("bit");

                                    b2.Property<DateTime>("ModifiedOn")
                                        .HasColumnType("datetime2");

                                    b2.Property<bool?>("SuppressConnectionHeader")
                                        .HasColumnType("bit");

                                    b2.Property<bool?>("SuppressContentLengthHeader")
                                        .HasColumnType("bit");

                                    b2.Property<byte[]>("Timestamp")
                                        .HasColumnType("varbinary(max)");

                                    b2.HasKey("HttpResponseExpectationId");

                                    b2.ToTable("Expectations");

                                    b2.WithOwner()
                                        .HasForeignKey("HttpResponseExpectationId");
                                });
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpTemplate", "HttpForwardTemplate", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Delay")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Template")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpTemplate", "HttpResponseTemplate", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Delay")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Template")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.LifeTime", "TimeToLive", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<int?>("TimeToLive")
                                .HasColumnType("int");

                            b1.Property<int?>("TimeUnit")
                                .HasColumnType("int");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.Property<bool?>("Unlimited")
                                .HasColumnType("bit");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });

                    b.OwnsOne("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.Times", "Times", b1 =>
                        {
                            b1.Property<int>("ExpectationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifiedOn")
                                .HasColumnType("datetime2");

                            b1.Property<int>("RemainingTimes")
                                .HasColumnType("int");

                            b1.Property<byte[]>("Timestamp")
                                .HasColumnType("varbinary(max)");

                            b1.Property<bool>("Unlimited")
                                .HasColumnType("bit");

                            b1.HasKey("ExpectationId");

                            b1.ToTable("Expectations");

                            b1.WithOwner()
                                .HasForeignKey("ExpectationId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
