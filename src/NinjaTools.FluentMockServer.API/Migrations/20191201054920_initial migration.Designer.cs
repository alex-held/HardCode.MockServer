// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NinjaTools.FluentMockServer.API.Data;

namespace NinjaTools.FluentMockServer.API.Migrations
{
    [DbContext(typeof(ExpectationDbContext))]
    [Migration("20191201054920_initial migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8");

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.Expectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("HttpErrorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HttpForwardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HttpRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HttpResponseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("TimeToLiveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TimesId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("HttpErrorId");

                    b.HasIndex("HttpForwardId");

                    b.HasIndex("HttpRequestId");

                    b.HasIndex("HttpResponseId");

                    b.HasIndex("TimeToLiveId");

                    b.HasIndex("TimesId");

                    b.ToTable("expectation");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Delay")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DropConnection")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ResponseBytes")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("httpError");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpForward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Host")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("httpForward");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("NVARCHAR");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("KeepAlive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Method")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<bool?>("Secure")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Path");

                    b.HasIndex("Path", "Id", "Method", "CreatedOn");

                    b.ToTable("httpRequest");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("NVARCHAR");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Delay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn", "StatusCode");

                    b.ToTable("httpResponse");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Delay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Template")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("httpTemplate");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.Verify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("HttpRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Times")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("HttpRequestId");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("verify");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.LifeTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("TimeToLive")
                        .HasColumnType("INTEGER");

                    b.Property<ushort?>("TimeUnit")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.Property<bool?>("Unlimited")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("lifeTime");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.Times", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RemainingTimes")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TimeStamp");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Timestamp", "CreatedOn", "ModifiedOn");

                    b.ToTable("times");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.Expectation", b =>
                {
                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpError", "HttpError")
                        .WithMany()
                        .HasForeignKey("HttpErrorId");

                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpForward", "HttpForward")
                        .WithMany()
                        .HasForeignKey("HttpForwardId");

                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpRequest", "HttpRequest")
                        .WithMany()
                        .HasForeignKey("HttpRequestId");

                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpResponse", "HttpResponse")
                        .WithMany()
                        .HasForeignKey("HttpResponseId");

                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.LifeTime", "TimeToLive")
                        .WithMany()
                        .HasForeignKey("TimeToLiveId");

                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.ValueTypes.Times", "Times")
                        .WithMany()
                        .HasForeignKey("TimesId");
                });

            modelBuilder.Entity("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.Verify", b =>
                {
                    b.HasOne("NinjaTools.FluentMockServer.Domain.Models.HttpEntities.HttpRequest", "HttpRequest")
                        .WithMany()
                        .HasForeignKey("HttpRequestId");
                });
#pragma warning restore 612, 618
        }
    }
}
